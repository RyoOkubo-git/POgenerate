structure Priority =
struct
  datatype AS = L | N | R
  type kwinfo = string*BToken*int*AS
  (*  val cmpfunc : kwinfo * kwinfo -> bool = fn (x,y) => ((#3(x))<=(#3(y)))  *)
  val exprOperators : kwinfo list = [
      (*4文字*)
      ("+->>",Keyword "PSur",125, L),
      ("-->>",Keyword "Sur", 125, L),
      ("/<<:",Keyword "SNInc", 110, L),
      (">->>",Keyword "TBij",125, L),
      (*3文字*)
      ("+->",Keyword "PFun", 125,L),
      ("-->",Keyword "TFun",125,L),
      ("/<:",Keyword "NInc",110,L),
      ("/|\\",Keyword "RSeqH",160,L),
      ("<->",Keyword "Rel",125,L),
      ("<<:",Keyword "SInc",110,L),
      ("<<|",Keyword "SubDom",160,L),  
      ("<=>",Keyword "Equiv",60,L),
      (">+>",Keyword "PInj",125,L),
      (">->",Keyword "TInj",125,L),
      ("\\|/",Keyword "RSeqE",160,L),
      ("|->",Keyword "Maplet",160,L),
      ("|>>", Keyword "SubRan",160,L),
      (*2文字*)
      ("**", Keyword "Power",200,R),
      ("->", Keyword "InsSeqStart",130,L),
      ("..", Keyword "Interval",170,L),
      ("/:", Keyword "NBelong",160,L),
      ("/=", Keyword "NEq",160,L),
      ("/\\", Keyword "Inter",160,L),  
      ("<+", Keyword "OverWrite",160,L),
      ("<-", Keyword "InsSeqEnd",160,L),
      ("<:", Keyword "Inclusion",110,L),
      ("<=", Keyword "LEq",160,L),
      ("<|", Keyword "ResDom",160,L), 
      ("=>", Keyword "Implies",30,L),
      ("><", Keyword "DProductRel",160,L), 
      (">=", Keyword "GEq",160,L),
      ("\\/", Keyword "Union",160,L),
      ("|>", Keyword "ResRan",160,L),
      (*1文字*)
      ("'", Keyword "AccessRecordField",250,L),
      ("*", Keyword "Asta",190,L),
      ("+", Keyword "Plus",180,L),
      (",", Keyword "Comma",115,L),
      ("-", Keyword "Minus",180,L),
      ("-", Keyword "UMinus",210,N),
      ("/", Keyword "Slash",190,L),
      (":", Keyword "Coron",60,L),
      (":", Keyword "RecordField",120,L),
      (";", Keyword "Semicoron",20,L),
      ("<", Keyword "Lt",160,L),
      (">", Keyword "Gt",160,L),
      ("^", Keyword "ConcatSeq",160,L),
      ("~", Keyword "Reverse",230,L),
      ("mod", Reserved "mod",190,L),
      ("/=",  Keyword   "NEq",              160,L), 
      ("/:",  Keyword   "NBelong",          160,L), 
      (">=",  Keyword   "GEq",              160,L), 
      ("<=",  Keyword   "LEq",              160,L), 
      (">",   Keyword   "Gt",               160,L), 
      ("<",   Keyword   "Lt",               160,L), 
      ("<:",  Keyword   "Inclusion",        110,L), 
      ("/<<:",Keyword   "SNInc",            110,L), 
      ("/<:", Keyword   "NInc",             110,L), 
      ("<<:", Keyword   "SInc",             110,L),   
      ("<=>", Keyword   "Equiv",             60,L), 
      (":",   Keyword   "Coron",             60,L), 
      ("=",   Keyword   "Eq",                60,L), 
      ("&",   Keyword   "And",               40,L), 
      ("or",  Reserved  "or",                40,L), 
      ("=>",  Keyword   "Implies",           30,L),
      (";",   Keyword   "Semicoron",         20,L)  
    ] 
end
